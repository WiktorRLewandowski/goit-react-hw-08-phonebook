{"version":3,"file":"static/js/934.e86da10e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"btn\":\"ContactList_btn__6Piat\",\"name\":\"ContactList_name__UCkFW\",\"number\":\"ContactList_number__2af8f\",\"line\":\"ContactList_line__JSmdI\",\"user\":\"ContactList_user__67mX+\",\"phone\":\"ContactList_phone__dbg3i\"};","export const selectContacts = state => state.contacts.contacts\n\nexport const selectFilter = state => state.filter.filter\n\nexport const selectIsLoading = state => state.contacts.isLoading\n\nexport const selectError = state => state.contacts.error","import css from './ContactList.module.css'\nimport PropTypes from 'prop-types'\nimport { FaUser, FaPhone } from 'react-icons/fa'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectContacts, selectFilter } from 'redux/selectors'\nimport { deleteContact } from 'redux/operations'\n\nexport const ContactList = () => {\n  const dispatch = useDispatch()\n  const contacts = useSelector(selectContacts)\n  const filter = useSelector(selectFilter)\n\n  const handleDelete = e => {\n    dispatch(deleteContact(e.target.id))\n  }\n\n  if (contacts) {\n    return (\n      <ul className={css.list}>\n        {contacts.map(({id, name, number, phone }) => { \n          return (\n            name.toLowerCase().includes(filter.toLowerCase()) \n            ? <li key={id} className={css.item}>\n                <p className={css.name}><FaUser className={css.user}/>{name}:</p> \n                <p className={css.number}><FaPhone className={css.phone}/>{number || phone}</p>\n                <button id={id} className={css.btn} onClick={handleDelete}>\n                  Delete contact\n                </button>\n                <hr className={css.line}/>\n              </li>\n            : ''\n          )\n        })}\n      </ul>\n    )\n  }\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  filter: PropTypes.string,\n  handleDelete: PropTypes.func,\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"label\":\"ContactsForm_label__Z7jht\",\"input\":\"ContactsForm_input__UjXFK\",\"btn\":\"ContactsForm_btn__qImoL\"};","import css from './ContactsForm.module.css'\nimport PropTypes from 'prop-types'\nimport Notiflix from \"notiflix\";\nimport { selectContacts } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\n\nexport const ContactForm = () => {\n\n  const dispatch = useDispatch()\n  const contacts = useSelector(selectContacts)\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n    const form = ev.target\n    const name = form.elements.name.value\n    const number = form.elements.number.value\n\n    if (contacts?.some((contact)=> contact.name.toLowerCase() === name.toLowerCase())) {\n      return Notiflix.Notify.failure(`${name} is already in the books!`)\n    }\n\n    dispatch(addContact({name, number}))\n\n    form.reset()\n  }\n\n    return (\n      <form onSubmit={handleSubmit} className={css.form}>\n          <label className={css.label}>Name:\n            <input\n              type=\"text\"\n              name=\"name\"\n              className={css.input}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n          </label>\n          <label className={css.label}>Number:\n            <input\n              type=\"tel\"\n              name=\"number\"\n              className={css.input}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n          </label>\n          <button className={css.btn} type=\"submit\">Add contact</button>\n        </form>\n      )\n  }\n  \n  ContactForm.propTypes = {\n    onSubmit: PropTypes.func,\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    number: PropTypes.string,\n  }","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Filter_text__uqQRu\",\"input\":\"Filter_input__N7T3z\",\"wrapper\":\"Filter_wrapper__9Ksqy\"};","import css from './Filter.module.css'\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectFilter } from 'redux/selectors'\nimport { filterChange } from 'redux/slices/filterSlice'\n\nexport const Filter = () => {\n  const dispatch = useDispatch()\n  const filter = useSelector(selectFilter)\n\n  const handleFilterChange = e => {\n    dispatch(filterChange(e.target.value))\n  }\n\n    return (\n      <div className={css.wrapper}>\n      <p className={css.text}>Find contacts by name</p>\n      <input \n        className={css.input}   \n        type=\"text\" \n        name=\"filter\" \n        value={filter} \n        onChange={handleFilterChange}\n        placeholder=\"\"\n      />\n        \n      </div>\n    )\n  }\n\n  Filter.propTypes = {\n    filter: PropTypes.string,\n    onChange: PropTypes.func\n  }","import { Loader } from \"components\"\nimport { ContactList } from \"components/ContactList\"\nimport { ContactForm } from \"components/ContactsForm\"\nimport { useSelector } from \"react-redux\"\nimport { selectIsLoading } from \"redux/selectors\"\nimport { Filter } from \"components/Filter\"\nimport { Helmet } from \"react-helmet-async\"\n\nconst Contacts = () => {\n    const isLoading = useSelector(selectIsLoading)\n    return (\n        <>\n            <Helmet>\n                <title>\n                    Contacts\n                </title>\n            </Helmet>\n            <ContactForm/>\n            <Filter/>\n            {!isLoading \n                ? <ContactList/> \n                : <Loader/>}\n        </>\n    )\n}\n\nexport default Contacts"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","ContactList","dispatch","useDispatch","useSelector","handleDelete","e","deleteContact","target","id","className","css","map","name","number","phone","toLowerCase","includes","onClick","ContactForm","onSubmit","ev","preventDefault","form","elements","value","some","contact","Notiflix","addContact","reset","type","pattern","title","required","Filter","onChange","filterChange","placeholder","Loader"],"sourceRoot":""}